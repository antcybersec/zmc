version: '3.8'

services:
  # AI Company Backend API
  ai-company-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-haiku-20240307}
      - DATABASE_URL=${DATABASE_URL:-./database/ai_company.db}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - RPC_URL=${RPC_URL}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
    volumes:
      - ./database:/app/database
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Company Frontend (React)
  ai-company-frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}
      - REACT_APP_BOLT_URL=${REACT_APP_BOLT_URL:-http://localhost:5174}
    depends_on:
      - ai-company-backend
    restart: unless-stopped

  # Bolt.diy Developer Agent
  bolt-diy:
    build:
      context: ./bolt.diy-main
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "5174:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - ANTHROPIC_API_KEY=${CLAUDE_API_KEY}
      - VITE_PUBLIC_APP_URL=${BOLT_PUBLIC_URL}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - ai-company-frontend
      - ai-company-backend
      - bolt-diy
    restart: unless-stopped

networks:
  default:
    driver: bridge
